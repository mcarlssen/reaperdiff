@font-face {
    font-family: 'Frutiger';
    src: url('../public/Frutiger.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Frutiger Bold';
    src: url('../public/Frutiger_bold.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

:root {
    --primary-bg: #2e2836; /* raisin black */
    --secondary-bg: #3c3446;
    --border-color: #50455e;
/*    --primary-bg: #1a1a1a; 
    --secondary-bg: #2a2a2a;
    --border-color: #3a3a3a; */
    --border-color-light: #4e4e4e;
    --text-color: #ddd;
    --text-accent-color: #ebb400;
    --accent-color: #4caf50;

    --added-clip-color: #719150;
    --deleted-clip-color: #bf4136;
    --modified-clip-color: #f5853f;
    --unchanged-clip-color: #086788;
    --silence-clip-color: #2e2836aa;
}

/* Add these global styles */
* {
    font-family: 'Hind', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--primary-bg);
    color: var(--text-color);
}

.app-container {
    display: grid;
    grid-template-rows: 100px 1fr 40px;
    min-height: 880px;
    width: min(1200px, calc(100% - 40px));
    margin: 0 auto;
    background-color: var(--primary-bg);
    overflow: hidden;
    transition: width 0.5s ease-in-out;
}

.app-container.full-width {
    width: calc(100% - 40px);
}

.app-title {
    text-transform: uppercase;
    color: var(--text-accent-color);
    filter: drop-shadow(1px 2px 1px #000);
    font-family: 'Frutiger Bold', sans-serif;
    font-size: 42px;
}

.top-banner {
    display: grid;
    grid-template-columns: 84% 14.25%;
    gap: 20px;
    align-items: start;
    padding: 0;
    border-radius: 15px;
    width: calc(100% - 40px);
    max-width: inherit;
    margin: 10px auto 0;
}

.banner-left, .banner-right {
    background-color: var(--secondary-bg);
    display: flex;
    height: 100%;
    border-radius: 15px;
    border-bottom: 1px solid var(--border-color);

}

.banner-left {
    justify-content: space-between;
    align-items: center;
    padding-left: 40px;
    padding-right: 20px;
}

.banner-right {
    display: flex;
    flex-direction: column;
    gap: 8px;
    justify-content: center;
    align-items: flex-start;
    height: 100%;
    padding-left: 20px;
}

.main-content {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: 1fr;
    padding: 20px;
    overflow: hidden;
    filter: drop-shadow(7px 10px 12px rgba(0, 0, 0, 0.4));
}

.container {
    grid-row: 1 / -1;
    background-color: var(--secondary-bg);
    border-radius: 15px;
    padding: 20px;
    min-height: 100%;
    overflow: hidden;
}

/* drop zone styles */

.dropzone-container {
  display: flex;
  gap: 20px;  /* Space between dropzones */
  margin-bottom: 20px;
  margin-top: 20px;
  opacity: 0;
  animation: fadeIn 0.2s ease-in-out forwards;
  width: 100%;
  max-width: 100%;
  transition: width 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.dropzone {
  flex: 1;  /* Each dropzone takes equal space */
  border: 2px dashed var(--text-accent-color);
  border-radius: 4px;
  height:122px;
  padding: 48px;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: transparent;  /* Default state */
}

/* Empty state hover */
.dropzone:not(.has-file):hover {
  background-color: rgba(235, 180, 0, 0.05);
}

/* Filled state */
.dropzone.has-file {
  border-style: solid;
  background-color: rgba(235, 180, 0, 0.05);
}

/* Remove background on hover when file is present */
.dropzone.has-file:hover {
  background-color: transparent;
}

/* Drag state text emphasis */
.dropzone-text-emphasis {
  color: var(--text-accent-color);
  font-weight: bold;
}

/* Active drag state */
.dropzone.dragactive {
  border-color: var(--text-accent-color);
  border-style: solid;
}

.dropzone.dragactive p {
  color: var(--text-accent-color);
}

.button-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    margin: 20px 0;
}

.detection-options {
    margin: 10px;
    display: flex;
    justify-content: center;
    gap: 20px;
    align-items: center;
    width: 100%;
}

.compare-button-container {
    display: flex;
    justify-content: center;
    width: 100%;
}

.compare-button {
  width: 50%;  /* Button takes 50% of container width */
  padding: 10px 20px;
  font-size: 16px;
  height: 42px;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
}

.compare-button:hover {
  background-color: #cc9900;  /* Darker yellow on hover */
}

.compare-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-color: var(--border-color);
  border: 1px solid var(--border-color-light);
}

/* Partial state (one file) */
.compare-button.partial {
  background-color: var(--border-color-light);  /* Using the lighter grey variable */
  color: var(--primary-bg);
}

/* Ready state (both files) */
.compare-button.ready {
  background-color: var(--text-accent-color);
  color: var(--primary-bg);
}

/* Hover states */
.compare-button.partial:hover {
  background-color: var(--border-color);
}

.compare-button.ready:hover {
  background-color: #cc9900;  /* Darker yellow */
}

.MuiFormControlLabel-root {
    gap:10px;
    margin: 0;
}
.banner-right .MuiFormControlLabel-root {
    color: var(--text-color);
    text-transform: uppercase;
    font-weight: bold;
    padding-left:5px;
}

.banner-right .MuiSwitch-root {
    margin-left: 10px;
}

.banner-right .MuiSwitch-root .MuiSwitch-switchBase.Mui-checked {
    color: var(--text-accent-color);
}

.banner-right .MuiSwitch-root .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track {
    background-color: var(--text-accent-color) !important;
}

/* Optional: style the unchecked state too */
.banner-right .MuiSwitch-root .MuiSwitch-switchBase {
    color: var(--text-color);
}

.banner-right .MuiSwitch-root .MuiSwitch-track {
    background-color: var(--border-color) !important;
}

.results-container {
  position: relative;
  margin-top: 40px;
  padding: 0px;
  border-top: 1px solid var(--border-color);
  border-radius: 8px;
  width: 100%;
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  transition: width 0.5s ease-out;
}

.results-list {
  padding: 0 10px;
}

.results-list-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  margin-top: 10px;
  text-transform: uppercase;
  font-size: 16px;
  font-weight: bold;
}

.results-list-content {
  transition: max-height 0.3s ease-out;
  padding-right: 10px;
}

.results-list-content.scrollable {
  max-height: 300px;
  overflow-y: auto;
}

.results-list-content.scrollable:hover {
  border-color: var(--border-color);
}

/* Custom scrollbar styling */
.results-list-content.scrollable::-webkit-scrollbar {
  width: 8px;
}

.results-list-content.scrollable::-webkit-scrollbar-track {
  background: var(--secondary-bg);
  border-radius: 4px;
}

.results-list-content.scrollable::-webkit-scrollbar-thumb {
  background: var(--border-color);
  border-radius: 4px;
}

.results-list-content.scrollable::-webkit-scrollbar-thumb:hover {
  background: var(--border-color-light);
}

.results-list ul {
  list-style: none;
}

.results-list li {
  padding: 5px 0;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  gap: 8px;
  font-size: .75em;
}

.results-list li:last-child {
  border-bottom: none;
}

.results-container svg {
  margin-top: 0px;
  background-color: var(--border-color);
  border-radius: 8px;
  padding: 10px;
  width: 100%;
  box-sizing: border-box;
}

.detection-options {
  display: flex;
  gap: 20px;
  align-items: center;
}

.detection-options .MuiFormControlLabel-root {
  color: var(--text-color);
}

.MuiFormControlLabel-root .MuiFormControlLabel-label {
  font-size: 9.6px !important;
  text-transform: uppercase !important;
}

.detection-options .MuiFormControlLabel-root .MuiSwitch-root {
  margin-left: 10px !important;
}

.detection-options .MuiSwitch-root .MuiSwitch-switchBase.Mui-checked {
  color: var(--text-accent-color);
}

.detection-options .MuiSwitch-root .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track {
  background-color: var(--text-accent-color) !important;
}

/* Optional: style the unchecked state too */
.detection-options .MuiSwitch-root .MuiSwitch-switchBase {
  color: var(--text-color);
}

.detection-options .MuiSwitch-root .MuiSwitch-track {
  background-color: var(--primary-bg) !important;
}

/* Common styles for both banner and detection options switches */
.MuiSwitch-root {
  width: 28px !important;
  height: 16px !important;
  padding: 0 !important;
  display: flex !important;
}

/* Switch base (the clickable area) */
.MuiSwitch-switchBase {
  padding: 2px !important;
  color: #fff !important;
}

/* Checked state positioning */
.MuiSwitch-switchBase.Mui-checked {
  transform: translateX(12px) !important;
  color: #fff !important;
}

/* The circular thumb */
.MuiSwitch-thumb {
  box-shadow: 0 2px 4px 0 rgba(0, 35, 11, 0.2) !important;
  width: 12px !important;
  height: 12px !important;
  border-radius: 6px !important;
  transition: width 200ms !important;
}

/* Active state (being clicked) */
.MuiSwitch-root:active .MuiSwitch-thumb {
  width: 15px !important;
}

.MuiSwitch-root:active .MuiSwitch-switchBase.Mui-checked {
  transform: translateX(9px) !important;
}

/* The track (background) */
.MuiSwitch-track {
  border-radius: 8px !important;
  opacity: 1 !important;
  background-color: rgba(0, 0, 0, 0.25) !important;
  box-sizing: border-box !important;
}

/* Checked state colors - using your accent color */
.MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track {
  background-color: var(--text-accent-color) !important;
  opacity: 1 !important;
}

.detection-method {
  font-weight: bold;
  color: var(--text-accent-color);
}

.result-item {
    cursor: pointer;
    transition: color 0.2s ease;
    margin: 4px 0;
    border-radius: 4px;
}

.result-item.added {
  background-color: #71915055;
  border-left: 3px solid #4caf50;
  padding-left:7px;
}

.result-item.deleted {
  background-color: #bf413655;
  border-left: 3px solid #f44336;
  padding-left:7px;
}

.result-item.changed {
  background-color: #f5853f55;
  border-left: 3px solid #ff9800;
  padding-left:7px;
}

.result-item.added:hover {
    color: var(--added-clip-color);
}

.result-item.deleted:hover {
    color: var(--deleted-clip-color);
}

.result-item.changed:hover {
    color: var(--modified-clip-color);
}

.algorithm-tooltip {
    white-space: pre-line;
}

.dropzone-text-emphasis {
  color: var(--text-accent-color);
  font-weight: bold;
}

.switch-container {
  display: flex;
  align-items: center;
  width: 100%;
}

/* Optional: if you want the switches themselves centered */
.switch-container .MuiFormControlLabel-root {
  justify-content: flex-start;
  width: 100%;
}

/* Update dropzone styling for disabled state */
.dropzone.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.test-mode-indicator {
  margin: 20px 0;
  height: 122px;  /* Match dropzone container height */
  background-color: rgba(235, 180, 0, 0.05);  /* Using your existing yellow fade */
  border: 2px solid var(--text-accent-color);
  border-radius: 4px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  animation: fadeIn 0.2s ease-in-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.test-mode-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.test-mode-content h3 {
  color: var(--text-accent-color);
  font-family: 'Frutiger Bold', sans-serif;
  font-size: 24px;
  margin: 0;
}

.test-mode-content .MuiFormControlLabel-label {
  color: var(--text-color);
  font-size: 14px;
}

.test-mode-indicator,
.dropzone-container {
  opacity: 0;
  animation: fadeIn 0.2s ease-in-out forwards;
}

.test-mode-indicator.fade-out,
.dropzone-container.fade-out {
  animation: fadeOut 0.2s ease-in-out forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.dataset-selector {
  display: flex !important;
  flex-direction: row !important;
  gap: 24px;
  margin: -5px 0;
  justify-content: center;
}

/* Target the actual container of radio buttons */
.dataset-selector .MuiFormGroup-root {
  flex-direction: row !important;
}

/* Ensure labels don't wrap */
.dataset-selector .MuiFormControlLabel-root {
    padding-top:5px;
    white-space: nowrap;
}

/* Maintain text color and spacing */
.dataset-selector .MuiFormControlLabel-label {
  color: var(--text-color);
}

.MuiRadio-root {
  color: var(--text-accent-color) !important;
}

.MuiRadio-root.Mui-checked {
  color: var(--text-accent-color) !important;
}

.dataset-error {
  color: var(--error-color);
  padding: 16px;
  text-align: center;
  border: 1px solid var(--error-color);
  border-radius: 4px;
  margin: 16px 0;
}

.loader-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  justify-content: center;
  align-items: center;
  height: 360px;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.loader-container.fade-in {
  opacity: 1;
}

.loader-container.fade-out {
  opacity: 0;
}

.timeline-container {
  width: 100%;
  opacity: 0;
  transition: opacity 0.3s ease-in-out, width 0.5s ease-out;
}

.timeline-container.fade-in {
  opacity: 1;
}

.timeline-container.fade-out {
  opacity: 0;
}

/* Update timeline styles */
.timeline-wrapper {
  width: 100%;
  overflow: hidden;
  transition: width 0.5s ease-out;
}

.timeline-svg {
  width: 100%;
  height: 100%;
  transition: width 0.5s ease-out;
}

/* Update results container */
.results-container {
  width: 100%;
  position: relative;
  transition: width 0.5s ease-out;
}

.timeline-container {
  width: 100%;
  opacity: 0;
  transition: opacity 0.3s ease-in-out, width 0.5s ease-out;
}

/* Ensure all parent containers properly transition */
.container {
  width: 100%;
  transition: width 0.5s ease-out;
}

.main-content {
  width: 100%;
  transition: width 0.5s ease-out;
}

/* Add these new styles */
.results-content-wrapper {
  display: flex;
  gap: 20px;
  width: 100%;
}

.results-stats {
  flex: 0 0 300px; /* Fixed width of 300px */
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 20px 20px 100px 20px; /* top right bottom left */
  height: fit-content;
}

.results-stats p {
  padding:5px 0;
  gap:8px;
  font-size: .75em;
}

/* Update existing results list styles */
.results-list {
  flex: 1; /* Takes remaining space */
}

.results-stats .duration-change {
    border-bottom: 1px solid var(--border-color);
    padding-bottom:10px;
    margin-bottom:20px;
}

.results-stats .duration-change h4 {
    font-size: 14px;
    text-transform: uppercase;
    color: var(--text-color);
}

.results-stats .duration-value {
    font-size: 18px !important;
    font-weight: bold;
    display: flex;
    align-items: baseline;
    gap: 8px;
}

.results-stats .duration-value.positive {
    color: var(--added-clip-color);
}

.results-stats .duration-value.negative {
    color: var(--deleted-clip-color);
}

.results-stats .duration-value .percentage {
    font-size: 14px;
    opacity: 0.8;
}
